#!/usr/bin/env bash

# MIT licensed
# Copyright Thomas Lehmann 2020

# Add expession to .git/info/exclude or closest .gitignore
# 
# $ git exclude 
# $ git exclude "path/to/exclude" ["other/path" [...]]
# 

function _git_root() {
	git rev-parse --show-cdup
}

function _append() {
	# Append exclusion if not already present
	local filepath="${1}"
	local to_exclude="${2}"

	if grep -q "^${to_exclude}$" ${filepath} 2>/dev/null; then
		echo "Pattern \"${to_exclude}\" is already included."
		return 0
	fi

	echo "${to_exclude}" >>${filepath}
}

function _edit() {
	# Edit the exclude file
	local editor="${GIT_EDITOR:-${EDITOR}}"
	local filepath="${1}"
	${editor} "${filepath}"
}

function _show() {
	# Readonly show the pattern file
	local filepath="${1}"
	less "${filepath}"
}

function fail() {
	echo "${*}"
	exit 1
}

function main() {
	local exclude_file="$( _git_root ).git/info/exclude"
	local to_exclude=""

	if [ ! -f "${exclude_file}" ]; then
		fail "Excldue file not found at $( readlink -f ${exclude_file} )"
	fi

	if [ ${#} -eq 0 ]; then
		_edit  "${exclude_file}"
	elif [ "${1}" == "--" ]; then
		_show "${exclude_file}"
	else
		while [ ${#} -gt 0 ]; do
			to_exclude="${1}"
			shift

			_append "${exclude_file}" "${to_exclude}"
		done
	fi
}

main ${@}
